location ^~ /users {
    set $upstream pbrn-users;
    rewrite ^ /_users_public last;
}

location ^~ /auth {
    set $upstream pbrn-users;
    rewrite ^ /_users_public last;
}

location = /_users_public {
    internal;

    if ($request_method = OPTIONS ) {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,authorization,User,user,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range' always;
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH' always;
        add_header 'Access-Control-Expose-Headers' 'Authorization,authorization,User,user' always;
        return 200;
    }

    # API Name for Logging
    set $api_name "PBRN Users API";

    proxy_read_timeout 1000s;
    proxy_connect_timeout 1000s;
    proxy_ssl_name pbrn-users.herokuapp.com;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host pbrn-users.herokuapp.com;
    proxy_ssl_server_name on;
    proxy_pass https://$upstream$request_uri;
}